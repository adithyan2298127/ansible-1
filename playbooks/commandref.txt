#ansible playbooks
ansible-playbook playbook1.yml --syntax-check
ansible-playbook playbook1.yml 

#refer ansible module syntax
ansible-doc -l
ansible-doc file

ansible-playbook fileplaybook.yml --syntax-check
#dry run
ansible-playbook -C fileplaybook.yml

ansible-playbook fileplaybook.yml
ansible-playbook fileplaybook.yml -v


Task excercise:
copy cal2025.txt to all systems /tmp using play book

#get copy module refer
ansible-doc copy
#create required playbook with copy module with required hosts
ansible-playbook copyfile.yml --syntax-check
ansible-playbook -C copyfile.yml 
ansible-playbook copyfile.yml 

#find tasks for update, install vim
ansible-doc apt

- name: Task1 Run the equivalent of "apt-get update" as a separate task
  apt:
    update_cache: yes

- name: Task 2 Install vim text editor  (state=present is optional)
  apt:
    name: vim
#state: present


ansible-playbook aptplay.yml --syntax-check
ansible-playbook -C aptplay.yml 
ansible-playbook aptplay.yml 

#create sudoers file for user a1 and copy to /etc/sudoers.d/a1nopass
refer copy module/example

ansible-playbook multitask.yml --syntax-check


#create user accounts
ansible-doc user

- name: Add the user 'johnd' with a specific uid and a primary group of 'admin'
  user:
    name: johnd
    comment: John Doe
    uid: 1040
    group: admin


ansible-playbook user.yml --syntax-check

## task assigned ##
install nginx in webserver, create default webpage with welcome message
    0. apt update
    1. apt install nginx
2. systemctl status nginx
3. systemctl start nginx  - [service] ansible-doc service
    4. create index.html with welcome message place it in \var\www\html folder
5. ufw allow 80/tcp - [ufw] ansible-doc ufw


ansible-playbook nginxdeploy.yml --syntax-check